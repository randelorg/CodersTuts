<?xml version="1.0"?><doc><assembly><name>Inetlab.SMPP</name></assembly><members><member name="M:Inetlab.SMPP.Builders.Builder`2.MessageInPayload(System.UInt16)"><summary>
            Send user data in the message_payload and specify maximal size of one message segment
            </summary><param name="messageSize">Maximal size of one part of the message</param></member><member name="M:Inetlab.SMPP.Builders.Builder`2.ConcatenationInSAR"><summary>
            Send user data in the short_message field and concatenation options in TLV paramaters
            </summary></member><member name="M:Inetlab.SMPP.Builders.Builder`2.ConcatenationInSAR(System.Byte)"><summary>
            Send user data in the short_message field and concatenation options in TLV paramaters.
            </summary><param name="referenceNumber">Reference number for a particular concatenated short message</param></member><member name="M:Inetlab.SMPP.Builders.Builder`2.ConcatenationInUDH"><summary>
            Send User Data in the short_message field and concatenation options in User Data Header
            </summary></member><member name="M:Inetlab.SMPP.Builders.Builder`2.ConcatenationInUDH(System.Byte)"><summary>
            Send User Data in the short_message field and concatenation options in User Data Header
            </summary><param name="referenceNumber">Reference number for a particular concatenated short message</param></member><member name="M:Inetlab.SMPP.Builders.Builder`2.Concatenation(Inetlab.SMPP.Builders.ConcatenationType,System.UInt16)"><summary>
            Change where to define concatenation parameters
            </summary><param name="concatenationType">Type of concatenation parameters</param><param name="referenceNumber">Reference number for a particular concatenated short message</param></member><member name="M:Inetlab.SMPP.Builders.IBuilder`1.Create(Inetlab.SMPP.SmppClientBase)"><summary>
            Creates a list of PDUs using settings from specified <see cref="T:Inetlab.SMPP.SmppClientBase" /></summary></member><member name="M:Inetlab.SMPP.Builders.IBuilder`1.Create(Inetlab.SMPP.Common.EncodingMapper)"><summary>
            Creates a list of PDUs using settings from specified <see cref="T:Inetlab.SMPP.Common.EncodingMapper" /></summary></member><member name="M:Inetlab.SMPP.Builders.IDataSmBuilder.Text(System.String)"><summary>
            Specifies message text. Can be long text.
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDataSmBuilder.Data(System.Byte[])"><summary>
            Sets user data for short message
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDataSmBuilder.MessageInPayload(System.UInt16)"><summary>
            Send message in message_payload parameter. Up to 64K can be transmitted. 
            </summary><param name="messageSize">Set message size if you need to transmit shorter message with concatenation in SAR parameters.</param></member><member name="M:Inetlab.SMPP.Builders.IDataSmBuilder.ConcatenationInSAR(System.Byte)"><summary>
            Send concatenation parameters in TLV options and specify own reference number. 
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDataSmBuilder.Concatenation(Inetlab.SMPP.Builders.ConcatenationType,System.UInt16)"><summary>
            Change type of concatenation parameters
            </summary><param name="concatenationType">Type of concatenation parameters</param><param name="referenceNumber">Reference number for a particular concatenated short message</param></member><member name="M:Inetlab.SMPP.Builders.IDataSmBuilder.Receipt(Inetlab.SMPP.Common.Receipt)"><summary>
            Specifies delivery receipt
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDataSmBuilder.Set(System.Action{Inetlab.SMPP.PDU.DataSm})"><summary>
            Execute additional actions when creating PDU;
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDeliverSmBuilder.Text(System.String)"><summary>
            Specifies message text. Can be long text.
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDeliverSmBuilder.Data(System.Byte[])"><summary>
            Sets user data for short message
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDeliverSmBuilder.MessageInPayload(System.UInt16)"><summary>
            Send message in message_payload parameter. Up to 64K can be transmitted. 
            </summary><param name="messageSize">Set message size if you need to trasmit shorter message with concatenation in SAR parameters.</param></member><member name="M:Inetlab.SMPP.Builders.IDeliverSmBuilder.ConcatenationInSAR"><summary>
            Send concatenation parameters in TLV options
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDeliverSmBuilder.Concatenation(Inetlab.SMPP.Builders.ConcatenationType,System.UInt16)"><summary>
            Change type of concatenation parameters
            </summary><param name="concatenationType">Type of concatenation parameters</param><param name="referenceNumber">Reference number for a particular concatenated short message</param></member><member name="M:Inetlab.SMPP.Builders.IDeliverSmBuilder.Receipt(Inetlab.SMPP.Common.Receipt)"><summary>
            Specifies delivery receipt
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDeliverSmBuilder.Set(System.Action{Inetlab.SMPP.PDU.DeliverSm})"><summary>
            Execute additional actions when creating PDU;
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDestinationAddressBuilder`1.To(System.String)"><summary>
            Specifies destination address with automatic detection of TON and NPI
            </summary></member><member name="M:Inetlab.SMPP.Builders.IDestinationAddressBuilder`1.To(System.String,Inetlab.SMPP.Common.AddressTON,Inetlab.SMPP.Common.AddressNPI)"><summary>
            Specifies destination address with TON and NPI
            </summary></member><member name="T:Inetlab.SMPP.Builders.IRegisteredDeliveryBuilder`1"><summary> Interface for creating value for registered_delivery field in PDU. </summary><typeparam name="TBuilder"> Type of the builder. </typeparam></member><member name="M:Inetlab.SMPP.Builders.IRegisteredDeliveryBuilder`1.DeliveryReceipt(Inetlab.SMPP.Common.SMSCDeliveryReceipt)"><summary>
            Requesting SMSC Delivery Receipt 
            </summary></member><member name="M:Inetlab.SMPP.Builders.IRegisteredDeliveryBuilder`1.Acknowledgement(Inetlab.SMPP.Common.SMEAcknowledgement)"><summary>
            Requesting SME originated Acknowledgement
            </summary></member><member name="M:Inetlab.SMPP.Builders.IRegisteredDeliveryBuilder`1.IntermediateNotification"><summary> Requesting Intermediate notification. </summary></member><member name="M:Inetlab.SMPP.Builders.ISourceAddressBuilder`1.From(System.String)"><summary>
            Specifies sender address with automatic detection of TON and NPI
            </summary></member><member name="M:Inetlab.SMPP.Builders.ISourceAddressBuilder`1.From(System.String,Inetlab.SMPP.Common.AddressTON,Inetlab.SMPP.Common.AddressNPI)"><summary>
            Specifies sender address with TON and NPI
            </summary></member><member name="M:Inetlab.SMPP.Builders.ISubmitMultiBuilder.MessageInPayload(System.UInt16)"><summary>
            Send message in message_payload parameter. Up to 64K can be transmitted. 
            </summary><param name="messageSize">Set message size if you need to trasmit shorter message with concatenation in SAR parameters.</param></member><member name="M:Inetlab.SMPP.Builders.ISubmitMultiBuilder.Concatenation(Inetlab.SMPP.Builders.ConcatenationType,System.UInt16)"><summary>
            Change type of concatenation parameters
            </summary><param name="concatenationType">Type of concatenation parameters</param><param name="referenceNumber">Reference number for a particular concatenated short message</param></member><member name="M:Inetlab.SMPP.Builders.ISubmitSmBuilder.MessageInPayload(System.UInt16)"><summary>
            Send message in message_payload parameter. Up to 64K can be transmitted. 
            </summary><param name="messageSize">Set message size if you need to transmit shorter message with concatenation in SAR parameters.</param></member><member name="M:Inetlab.SMPP.Builders.ISubmitSmBuilder.ConcatenationInUDH"><summary>
            Use Concatenation in User Data header.
            </summary></member><member name="M:Inetlab.SMPP.Builders.ISubmitSmBuilder.ConcatenationInUDH(System.Byte)"><summary>
            Use Concatenation in User Data header with specified reference number.
            </summary></member><member name="M:Inetlab.SMPP.Builders.ISubmitSmBuilder.ConcatenationInSAR"><summary>
            Use Concatenation in SAR TLV parameters.
            </summary></member><member name="M:Inetlab.SMPP.Builders.ISubmitSmBuilder.ConcatenationInSAR(System.Byte)"><summary>
            Use Concatenation in SAR TLV parameters with specified reference number.
            </summary></member><member name="M:Inetlab.SMPP.Builders.ISubmitSmBuilder.Concatenation(Inetlab.SMPP.Builders.ConcatenationType,System.UInt16)"><summary>
            Change type of concatenation parameters
            </summary><param name="concatenationType">Type of concatenation parameters</param><param name="referenceNumber">Reference number for a particular concatenated short message</param></member><member name="F:Inetlab.SMPP.Builders.Splitters.TextSplitter._data"><summary> Byte array of message text in Client encoding. </summary></member><member name="T:Inetlab.SMPP.Common.CertificateValidationEventArgs"><summary>
            Class that provides event data for validation remote certificates
            </summary></member><member name="P:Inetlab.SMPP.Common.CertificateValidationEventArgs.Certificate"><summary>
            The certificate used to authenticate the remote party.
            </summary></member><member name="P:Inetlab.SMPP.Common.CertificateValidationEventArgs.Chain"><summary>
            The chain of certificate authorities associated with the remote certificate.
            </summary></member><member name="P:Inetlab.SMPP.Common.CertificateValidationEventArgs.SslPolicyErrors"><summary>
            One or more errors associated with the remote certificate.
            </summary></member><member name="P:Inetlab.SMPP.Common.CertificateValidationEventArgs.Accepted"><summary>
            A <see cref="T:System.Boolean" /> value that determines whether the specified certificate is accepted for authentication.
            </summary></member><member name="M:Inetlab.SMPP.Common.CertificateValidationEventArgs.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors)"><summary> Constructor. </summary><param name="certificate">     The certificate used to authenticate the remote party. </param><param name="chain">            The chain of certificate authorities associated with the
                                             remote certificate. </param><param name="sslPolicyErrors">  One or more errors associated with the remote certificate. </param></member><member name="T:Inetlab.SMPP.Common.CommandSet"><summary>
            The CommandSet identifies the type of message the SMPP PDU represents,
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandSet.GenericNack"><summary>
            generic negative acknowledgement to an SMPP PDU submitted with an invalid message header.
            </summary></member><member name="T:Inetlab.SMPP.Common.CommandStatus"><summary>
            CommandStatus of an SMPP message response indicates the success or failure of an SMPP request.
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_ROK"><summary>
            No Error
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVMSGLEN"><summary>
            Message Length is invalid
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVCMDLEN"><summary>
            Command Length is invalid
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVCMDID"><summary>
            Invalid Command ID
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVBNDSTS"><summary>
            Incorrect BIND Status for given command
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RALYBND"><summary>
            ESME Already in Bound State
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVPRTFLG"><summary>
            Invalid Priority Flag
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVREGDLVFLG"><summary>
            Invalid Registered Delivery Flag
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RSYSERR"><summary>
             System Error
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVSRCADR"><summary>
            Invalid Source Address
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVDSTADR"><summary>
            Invalid Dest Addr
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVMSGID"><summary>
            Message ID is invalid
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RBINDFAIL"><summary>
            Bind Failed
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVPASWD"><summary>
            Invalid Password
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVSYSID"><summary>
            Invalid System ID
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RCANCELFAIL"><summary>
            Cancel SM Failed
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RREPLACEFAIL"><summary>
            Replace SM Failed
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RMSGQFUL"><summary>
            Message Queue Full
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVSERTYP"><summary>
            Invalid Service Type
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVNUMDESTS"><summary>
            Invalid number of destinations
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVDLNAME"><summary>
            Invalid Distribution List name
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVDESTFLAG"><summary>
             Destination flag is invalid (submit_multi)
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVSUBREP"><summary>
            Invalid "submit with replace" request(i.e. submit_sm with replace_if_present_flag set)
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVESMCLASS"><summary>
            Invalid esm_class field data
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RCNTSUBDL"><summary>
            Cannot Submit to Distribution List
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RSUBMITFAIL"><summary>
            submit_sm or submit_multi failed
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVSRCTON"><summary>
             Invalid Source address TON
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVSRCNPI"><summary>
            Invalid Source address NPI
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVDSTTON"><summary>
            Invalid Destination address TON
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVDSTNPI"><summary>
            Invalid Destination address NPI
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVSYSTYP"><summary>
            Invalid system_type field
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVREPFLAG"><summary>
            Invalid replace_if_present flag
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVNUMMSGS"><summary>
            Invalid number of messages
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RTHROTTLED"><summary>
            Throttling error (ESME has exceeded allowed message limits)
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVSCHED"><summary>
            Invalid Scheduled Delivery Time
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVEXPIRY"><summary>
            Invalid message validity period (Expiry time)
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVDFTMSGID"><summary>
            Predefined Message Invalid or Not Found
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RX_T_APPN"><summary>
             ESME Receiver Temporary App Error Code
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RX_P_APPN"><summary>
            ESME Receiver Permanent App Error Code
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RX_R_APPN"><summary>
            ESME Receiver Reject Message Error Code
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RQUERYFAIL"><summary>
            query_sm request failed
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVOPTPARSTREAM"><summary>
             Error in the optional part of the PDU Body.
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_ROPTPARNOTALLWD"><summary>
             Optional Parameter not allowed
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVPARLEN"><summary>
            Invalid Parameter Length.
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RMISSINGOPTPARAM"><summary>
            Expected Optional Parameter missing
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RINVOPTPARAMVAL"><summary>
            Invalid Optional Parameter Value
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RDELIVERYFAILURE"><summary>
            Delivery Failure (used for data_sm_resp)
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.ESME_RUNKNOWNERR"><summary>
            Unknown Error
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.SMPPCLIENT_UNEXPRESP"><summary>
            SMPP Client Unexpected Response
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.SMPPCLIENT_RCVTIMEOUT"><summary>
            SMPP Client Receive Timeout
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.SMPPCLIENT_NOCONN"><summary>
             SMPP Client No Connection
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.SMPPCLIENT_UNBOUND"><summary>
            SMPP Client Unbound
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.SMPPCLIENT_NORESP"><summary>
            SMPP Client No Response
            </summary></member><member name="F:Inetlab.SMPP.Common.CommandStatus.SMPPCLIENT_UNKNOWNERROR"><summary>
            SMPP Client Unknown Error
            </summary></member><member name="T:Inetlab.SMPP.Common.Concatenation"><summary>
            Represents concatenation parameters
            </summary></member><member name="P:Inetlab.SMPP.Common.Concatenation.ReferenceNumber"><summary>
            Concatenated short message reference number.
            </summary></member><member name="P:Inetlab.SMPP.Common.Concatenation.Total"><summary>
            Maximum number of short messages in the concatenated short message.
            </summary></member><member name="P:Inetlab.SMPP.Common.Concatenation.SequenceNumber"><summary>
            Sequence number of the current short message.
            </summary></member><member name="T:Inetlab.SMPP.Common.ConnectionMode"><summary>
            ESME may bind to the SMSC as either a Transmitter (called ESME
            Transmitter), a Receiver (called ESME Receiver) or a Transceiver (called ESME Transceiver).
            </summary></member><member name="F:Inetlab.SMPP.Common.ConnectionMode.None"><summary>
            Connection mode not specified.
            </summary></member><member name="F:Inetlab.SMPP.Common.ConnectionMode.Transmitter"><summary>
            An ESME bound as a Transmitter is authorised to send short messages to the SMSC and to
            receive the corresponding SMPP responses from the SMSC.
            </summary></member><member name="F:Inetlab.SMPP.Common.ConnectionMode.Receiver"><summary>
            An ESME bound as a Receiver is authorised to receive short messages from the SMSC and to
            return the corresponding SMPP message responses to the SMSC.
            </summary></member><member name="F:Inetlab.SMPP.Common.ConnectionMode.Transceiver"><summary>
            An ESME bound as a Transceiver is allowed to send messages to the SMSC and receive
            messages from the SMSC over a single SMPP session.
            </summary></member><member name="T:Inetlab.SMPP.Common.ConnectionStatus"><summary>
            Client connection status
            </summary></member><member name="F:Inetlab.SMPP.Common.ConnectionStatus.Closed"><summary>
            Connection closed
            </summary></member><member name="F:Inetlab.SMPP.Common.ConnectionStatus.Open"><summary>
            Client connected, but not bound
            </summary></member><member name="F:Inetlab.SMPP.Common.ConnectionStatus.Bound"><summary>
            Client bound
            </summary></member><member name="F:Inetlab.SMPP.Common.ConnectionStatus.Outbound"><summary>
            MC initiates SMPP session
            </summary></member><member name="T:Inetlab.SMPP.Common.DataCodings"><summary>
            Indicates the encoding scheme of the short message.
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Default"><summary>
            SMSC Default Alphabet (GSM 7 bit) (0x0)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.ASCII"><summary>
            IA5 (CCITT T.50)/ASCII (ANSI X3.4) (0x1)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Octets"><summary>
            Octet unspecified (8-bit binary) (0x2)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Latin1"><summary>
            Latin 1 (ISO-8859-1) (0x3)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.OctetUnspecified"><summary>
            Octet unspecified (8-bit binary) (0x4)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Cyrllic"><summary>
            Cyrllic (ISO-8859-5)(0x6)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.LatinHebrew"><summary>
            Latin/Hebrew (ISO-8859-8) (0x7)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.UCS2"><summary>
            UCS2 (ISO/IEC-10646) (0x8)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class0FlashMessage"><summary>
            Flash message (Class 0) (0x10)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class1MEMessage"><summary>
            ME-specific message (Class 1) (0x11)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class2SIMMessage"><summary>
            IM/USIM-specific message (Class 2) (0x12)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class3TEMessage"><summary>
            TE-specific message (Class 3) (0x13)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class0FlashMessage8bit"><summary>
            Flash message (Class 0) with 8 bit data (0x14)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class1MEMessage8bit"><summary>
            ME-specific message (Class 1) with 8 bit data (0x15)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class2SIMMessage8bit"><summary>
            IM/USIM-specific message (Class 2) with 8 bit data (0x16)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class3TEMessage8bit"><summary>
            TE-specific message (Class 3) with 8 bit data (0x17)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class0FlashMessageUCS2"><summary>
            Flash message (Class 0) with UCS2 characters (0x18)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class1MEMessageUCS2"><summary>
            ME-specific message (Class 1) with UCS2 characters  (0x19)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class2SIMMessageUCS2"><summary>
            IM/USIM-specific message (Class 2) with UCS2 characters (0x1A)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class3TEMessageUCS2"><summary>
            TE-specific message (Class 3) with UCS2 characters  (0x1B)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class0"><summary>
            Message Class 0 (0xF0)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class1"><summary>
            Message Class 1 (0xF1)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class2"><summary>
            Message Class 2 (0xF2)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class3"><summary>
            Message Class 3 (0xF3)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class08Bit"><summary>
            Class 0 Flash message 8bit data (0xF4)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class1ME8Bit"><summary>
            Class 1 ME specific 8-bit data (0xF5)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class2SIM8Bit"><summary>
            Class 2 SIM specific 8-bit data (0xF6)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.Class3TE8Bit"><summary>
            Class 3 TE specific 8-bit data (0xF7)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.GroupAutomaticDeletion"><summary>
            Coding Group: Message Marked for Automatic Deletion
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.GroupMessageClass"><summary>
            Coding Group: Data Coding/Message Class
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.DefaultFlashSMS"><summary>
            Flash SMS with GSM 7 bit charset (0x10)
            </summary></member><member name="F:Inetlab.SMPP.Common.DataCodings.UnicodeFlashSMS"><summary>
            Flash SMS with Unicode characters (0x18)
            </summary></member><member name="T:Inetlab.SMPP.Common.DistributionList"><summary>
            Represents Distribution list name 
            </summary></member><member name="T:Inetlab.SMPP.Common.EncodingMapper"><summary> A class that helps to configure mapping between data coding scheme for short message and .NET Encoding.</summary></member><member name="P:Inetlab.SMPP.Common.EncodingMapper.AddressEncoding"><summary> Gets or sets the encoding used in Source or Destination address of the PDU. By default uses <see cref="T:System.Text.Encoding" /> assigned for <see cref="F:Inetlab.SMPP.Common.DataCodings.Default" /></summary><value> The address encoding. </value></member><member name="M:Inetlab.SMPP.Common.EncodingMapper.#ctor(Inetlab.SMPP.Common.EncodingMapper)"><summary> Constructor that creates a copy of the <see cref="T:Inetlab.SMPP.Common.EncodingMapper" /></summary><param name="mapper"> The source mapper. </param></member><member name="M:Inetlab.SMPP.Common.EncodingMapper.MapEncoding(Inetlab.SMPP.Common.DataCodings,System.Text.Encoding)"><summary>
            Assigns SMPP data coding scheme to characters encoding represented by class inherited from Encoding class
            </summary><param name="dataCoding">SMPP data coding scheme</param><param name="messageEncoding">The encoding defines process how message text is transformed into sequence of bytes that included in the PDU. </param></member><member name="M:Inetlab.SMPP.Common.EncodingMapper.GetMappedEncoding(Inetlab.SMPP.Common.DataCodings)"><summary>
            Returns mapped Encoding for specified dataCoding. If dataCoding not found in mapped encodings, returns Encoding.Default
            </summary><param name="dataCoding"></param><returns></returns></member><member name="M:Inetlab.SMPP.Common.EncodingMapper.GetMessageText(Inetlab.SMPP.PDU.SmppPDU)"><summary>
            Gets message text from the PDU.
            </summary><example>
             string messageText = client.EncodingMapper.GetMessageText(pdu);
            </example></member><member name="M:Inetlab.SMPP.Common.EncodingMapper.GetMessageText(System.Byte[],Inetlab.SMPP.Common.DataCodings)"><summary>
            Converts sort message buffer to unicode string using specified data coding.
            </summary></member><member name="M:Inetlab.SMPP.Common.EncodingMapper.GetMessageBytes(System.String,Inetlab.SMPP.Common.DataCodings)"><summary>
            Converts string to short message bytes for specified data coding.
            </summary></member><member name="T:Inetlab.SMPP.Common.GSMSpecificFeatures"><summary>
            GSM Network Specific Features (bits 7-6 of esm_class)
            </summary></member><member name="F:Inetlab.SMPP.Common.GSMSpecificFeatures.No"><summary>
            No specific features selected
            </summary></member><member name="F:Inetlab.SMPP.Common.GSMSpecificFeatures.UDHI"><summary>
            UDHI Indicator set
            </summary></member><member name="F:Inetlab.SMPP.Common.GSMSpecificFeatures.ReplyPath"><summary>
            Set Reply Path (only relevant for GSM network)
            </summary></member><member name="F:Inetlab.SMPP.Common.GSMSpecificFeatures.UDHIandReplyPath"><summary>
            Set UDHI and Reply Path (only relevant for GSM network)
            </summary></member><member name="T:Inetlab.SMPP.Common.IConcatenation"><summary> Defines SMPP request that supports concatenation parameters. </summary></member><member name="T:Inetlab.SMPP.Common.IntermediateNotification"><summary>
            Intermediate Notification (bit 5 of registered_delivery)
            </summary></member><member name="F:Inetlab.SMPP.Common.IntermediateNotification.NotRequested"><summary>
            No Intermediate notification requested (default)
            </summary></member><member name="F:Inetlab.SMPP.Common.IntermediateNotification.Requested"><summary>
            Intermediate notification requested
            </summary></member><member name="F:Inetlab.SMPP.Common.LimitRate._rate"><summary> Milliseconds between occurrences</summary></member><member name="T:Inetlab.SMPP.Common.MessageComposer"><summary>
            Helps to combine concatenated segments into complete message text.
            </summary></member><member name="P:Inetlab.SMPP.Common.MessageComposer.Timeout"><summary>
            Gets or sets time interval for waiting next segment of the message. Default is 60 seconds.
            </summary></member><member name="E:Inetlab.SMPP.Common.MessageComposer.evFullMessageReceived"><summary>
            Occurs when all message segments received. Contains concatenated message text.
            </summary></member><member name="E:Inetlab.SMPP.Common.MessageComposer.evFullMessageTimeout"><summary>
            Occurs when all message segments were not received during <see cref="P:Inetlab.SMPP.Common.MessageComposer.Timeout" />.
            </summary></member><member name="M:Inetlab.SMPP.Common.MessageComposer.AddMessage``1(``0)"><summary> Adds concatenated message part. </summary><typeparam name="TSmppMessage"> Type of the smpp message. </typeparam><param name="message"> The message. </param></member><member name="P:Inetlab.SMPP.Common.MessageComposer.Items"><summary> Gets the items that contains message parts.</summary><value> The items array.</value></member><member name="M:Inetlab.SMPP.Common.MessageComposer.Clear"><summary> Removes all saved message parts. </summary></member><member name="M:Inetlab.SMPP.Common.MessageComposer.IsLastSegment``1(``0)"><summary> Check if PDU is last segment in the concatenated message. </summary><typeparam name="TSmppMessage"> Generic type parameter of SMPP message. </typeparam><param name="message"> The message. </param><returns> True if last segment, false if not. </returns></member><member name="M:Inetlab.SMPP.Common.MessageComposer.GetFullMessage``1(``0)"><summary> Gets full message for any part </summary><typeparam name="TSmppMessage"> Generic type parameter of SMPP message. </typeparam><param name="message"> The message. </param><returns> The full message text or the text with inclusions "&lt;MISSING PART&gt;" on the places of missing parts.</returns><remarks>This method deletes corresponding <see cref="T:Inetlab.SMPP.Common.ComposerItem" /> from <see cref="T:Inetlab.SMPP.Common.MessageComposer" /> when all message parts are received.</remarks></member><member name="T:Inetlab.SMPP.Common.ComposerItem"><summary> Represents an item for <see cref="T:Inetlab.SMPP.Common.MessageComposer" /> that collects received parts of the concatenation message. </summary></member><member name="M:Inetlab.SMPP.Common.ComposerItem.HasAllParts"><summary> Check if concatenated message has all parts. </summary><returns> True if all parts, false if not. </returns></member><member name="M:Inetlab.SMPP.Common.ComposerItem.GetFullMessage"><summary> Gets full text for concatenated message.</summary><returns> The full message. </returns></member><member name="T:Inetlab.SMPP.Common.MessageEventHandlerArgs"><summary> Arguments for message event handler in <see cref="T:Inetlab.SMPP.Common.MessageComposer" />. </summary></member><member name="P:Inetlab.SMPP.Common.MessageEventHandlerArgs.Text"><summary> Gets full text </summary><value> The text. </value></member><member name="P:Inetlab.SMPP.Common.MessageEventHandlerArgs.Parts"><summary> Gets parts from which that full text consist of. </summary><value> The parts. </value></member><member name="M:Inetlab.SMPP.Common.MessageEventHandlerArgs.GetFirst``1"><summary> Gets first not null part </summary><typeparam name="TPDU"> Type of the SMPP PDU. </typeparam><returns> The first. </returns></member><member name="T:Inetlab.SMPP.Common.MessageModes"><summary>
            Messaging Modes (bits 1-0 of esm_class) 
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageModes.Default"><summary>
            Default SMSC Mode (e.g. Store and Forward)
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageModes.Datagram"><summary>
            Datagram mode
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageModes.Forward"><summary>
            Forward (i.e. Transaction) mode
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageModes.StoreForward"><summary>
            Store and Forward mode
            </summary></member><member name="T:Inetlab.SMPP.Common.MessageState"><summary>
            States for a short message.
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageState.Enroute"><summary>
            The message is in enroute state.
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageState.Delivered"><summary>
            Message is delivered to destination
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageState.Expired"><summary>
             Message validity period has expired.
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageState.Deleted"><summary>
            Message has been deleted.
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageState.Undeliverable"><summary>
             Message is undeliverable
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageState.Accepted"><summary>
            Message is in accepted state 
            (i.e. has been manually read on behalf of the subscriber by customer service)
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageState.Unknown"><summary>
            Message is in invalid state
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageState.Rejected"><summary>
            Message is in a rejected state
            </summary></member><member name="T:Inetlab.SMPP.Common.MessageTypes"><summary>
            Messaging Types (bits 5-2 of esm_class) 
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageTypes.Default"><summary>
            Default message Type (i.e. normal message)
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageTypes.SMEDeliveryAcknowledgement"><summary>
            (ESME -&gt; SMSC)
            Short Message contains ESME Delivery Acknowledgement
            (SMSC -&gt; ESME)
            Short Message contains SME Delivery Acknowledgement
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageTypes.SMEManualAcknowledgement"><summary>
            (ESME -&gt; SMSC)
            Short Message contains ESME Manual/User Acknowledgement
            (SMSC -&gt; ESME)
            Short Message contains SME Manual/User Acknowledgment
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageTypes.SMSCDeliveryReceipt"><summary>
            (SMSC -&gt; ESME)
            Short Message contains SMSC Delivery Receipt
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageTypes.ConversationAbort"><summary>
            (SMSC -&gt; ESME)
            Short Message contains Conversation Abort (Korean CDMA)
            </summary></member><member name="F:Inetlab.SMPP.Common.MessageTypes.IntermediateDeliveryNotification"><summary>
            (SMSC -&gt; ESME)
            Short Message contains Intermediate Delivery Notification
            </summary></member><member name="T:Inetlab.SMPP.Common.Npi"><summary>
            Numeric Plan Indicator (NPI) used in the SME address parameters.
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.Unknown"><summary>
            Unknown
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.ISDN"><summary>
            ISDN
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.DataX121"><summary>
            DataX121
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.TelexF69"><summary>
            TelexF69
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.LandMobileE212"><summary>
            LandMobileE212
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.National"><summary>
            National
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.Private"><summary>
            Private
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.ERMES"><summary>
            ERMES
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.Internet"><summary>
            Internet
            </summary></member><member name="F:Inetlab.SMPP.Common.Npi.WAP"><summary>
            WAP
            </summary></member><member name="T:Inetlab.SMPP.Common.ProxyEndpoint"><summary> Represents header of Proxy Protocol </summary></member><member name="P:Inetlab.SMPP.Common.ProxyEndpoint.Source"><summary> Original source address </summary></member><member name="P:Inetlab.SMPP.Common.ProxyEndpoint.Destination"><summary> Destination address on proxy server </summary></member><member name="T:Inetlab.SMPP.Common.QueueState"><summary>
            Represents state for receive and send queues
            </summary></member><member name="P:Inetlab.SMPP.Common.QueueState.SendCount"><summary>
            Gets number of PDUs that stay in the send queue before sending to network 
            </summary></member><member name="P:Inetlab.SMPP.Common.QueueState.SendWorkersCount"><summary>
            Gets number of worker threads that send PDUs to remote side. Always 1.
            </summary></member><member name="P:Inetlab.SMPP.Common.QueueState.ReceiveCount"><summary>
            Gets number of PDUs that stay in the receive queue and wait for being processed with application event handlers. 
            </summary></member><member name="P:Inetlab.SMPP.Common.QueueState.ReceiveWorkersCount"><summary>
            Gets a number of worker threads that process PDUs from receive queue and invoke event handlers in the application
            </summary></member><member name="P:Inetlab.SMPP.Common.QueueState.IncompleteRequests"><summary>
            Gets number of request that didn't receive their response.
            </summary></member><member name="T:Inetlab.SMPP.Common.RateGate"><summary>
            Used to control the rate of some occurrence per unit of time.
            </summary><remarks><para>
                To control the rate of an action using a <see cref="T:Inetlab.SMPP.Common.RateGate" />, 
                code should simply call <see cref="M:Inetlab.SMPP.Common.RateGate.WaitToProceed" /> prior to 
                performing the action. <see cref="M:Inetlab.SMPP.Common.RateGate.WaitToProceed" /> will block
                the current thread until the action is allowed based on the rate 
                limit.
                </para><para>
                This class is thread safe. A single <see cref="T:Inetlab.SMPP.Common.RateGate" /> instance 
                may be used to control the rate of an occurrence across multiple 
                threads.
                </para></remarks></member><member name="P:Inetlab.SMPP.Common.RateGate.Rate"><summary>
            Number of occurrences allowed per unit of time.
            </summary></member><member name="M:Inetlab.SMPP.Common.RateGate.WaitToProceed(System.Int32)"><summary>
            Blocks the current thread until allowed to proceed or until the
            specified timeout elapses.
            </summary><param name="millisecondsTimeout">Number of milliseconds to wait, or -1 to wait indefinitely.</param><returns>true if the thread is allowed to proceed, or false if timed out</returns></member><member name="M:Inetlab.SMPP.Common.RateGate.WaitToProceed(System.TimeSpan)"><summary>
            Blocks the current thread until allowed to proceed or until the
            specified timeout elapses.
            </summary><param name="timeout"></param><returns>true if the thread is allowed to proceed, or false if timed out</returns></member><member name="M:Inetlab.SMPP.Common.RateGate.WaitToProceed"><summary>
            Blocks the current thread indefinitely until allowed to proceed.
            </summary></member><member name="M:Inetlab.SMPP.Common.RateGate.Dispose"><summary>
            Releases unmanaged resources held by an instance of this class.
            </summary></member><member name="M:Inetlab.SMPP.Common.RateGate.Dispose(System.Boolean)"><summary>
            Releases unmanaged resources held by an instance of this class.
            </summary><param name="isDisposing">Whether this object is being disposed.</param></member><member name="T:Inetlab.SMPP.Common.Receipt"><summary>
            Represents Delivery receipt
            </summary></member><member name="P:Inetlab.SMPP.Common.Receipt.MessageId"><summary>
            The message ID allocated to the message by the SMSC when originally submitted.
            You can get it from SUBMIT_SM_RESP.
            </summary></member><member name="P:Inetlab.SMPP.Common.Receipt.Submitted"><summary>
            Number of short messages originally submitted.
            This is only relevant when the original message was submitted to a distribution list.
            </summary></member><member name="P:Inetlab.SMPP.Common.Receipt.Delivered"><summary>
            Number of short messages delivered. 
            This is only relevant where the original message was submitted to a distribution list
            </summary></member><member name="P:Inetlab.SMPP.Common.Receipt.SubmitDate"><summary>
            The time and date at which the short message was submitted.
            </summary></member><member name="P:Inetlab.SMPP.Common.Receipt.DoneDate"><summary>
            The time and date at which the short message reached it’s final state.
            </summary></member><member name="P:Inetlab.SMPP.Common.Receipt.State"><summary>
            The final status of the message.
            </summary></member><member name="P:Inetlab.SMPP.Common.Receipt.ErrorCode"><summary>
            Network specific error code or an SMSC error code for the attempted delivery of the message.
            </summary></member><member name="P:Inetlab.SMPP.Common.Receipt.Text"><summary>
            The first 20 characters of the short message.
            </summary></member><member name="M:Inetlab.SMPP.Common.ISequenceGenerator.NextSequenceNumber"><summary>
            Returns next sequence number which allows SMPP requests and responses to be associated for correlation purposes.
            </summary></member><member name="M:Inetlab.SMPP.Common.ISequenceGenerator.NextReferenceNumber"><summary>
            Returns next reference number which allows parallel transmission of several segmented messages.
            </summary></member><member name="M:Inetlab.SMPP.Common.ISequenceGenerator.Next16bitReferenceNumber"><summary>
            Returns next reference number for 16 bit concatenation header
            </summary></member><member name="M:Inetlab.SMPP.Common.SingleTask.GetOrRun``1(System.String,System.Func{System.Threading.Tasks.Task{``0}})"><summary> Gets running task or starts new task</summary></member><member name="M:Inetlab.SMPP.Common.SingleTask.GetOrRun(System.String,System.Func{System.Threading.Tasks.Task})"><summary> Gets running task or starts new task</summary></member><member name="T:Inetlab.SMPP.Common.SMEAcknowledgement"><summary>
            SME originated Acknowledgement (bits 3 and 2 of registered_delivery)
            </summary></member><member name="F:Inetlab.SMPP.Common.SMEAcknowledgement.NotRequested"><summary>
            No recipient SME acknowledgment requested (default)
            </summary></member><member name="F:Inetlab.SMPP.Common.SMEAcknowledgement.Delivery"><summary>
            SME Delivery Acknowledgement requested
            </summary></member><member name="F:Inetlab.SMPP.Common.SMEAcknowledgement.Manual"><summary>
            SME Manual/User Acknowledgment requested
            </summary></member><member name="F:Inetlab.SMPP.Common.SMEAcknowledgement.DeliveryManual"><summary>
            Both Delivery and Manual/User Acknowledgment requested
            </summary></member><member name="P:Inetlab.SMPP.Common.SmeAddress.TON"><summary>
            The Type of Number (TON) to be used in the address parameters
            </summary></member><member name="P:Inetlab.SMPP.Common.SmeAddress.NPI"><summary>
            The Numeric Plan Indicator (NPI) to to be used in the address parameters
            </summary></member><member name="P:Inetlab.SMPP.Common.SmeAddress.Address"><summary>
            Specifies the address value
            </summary></member><member name="T:Inetlab.SMPP.Common.SmppErrorEventArgs"><summary>
            Class that provides event data for errors occured during process SMPP messages
            </summary></member><member name="P:Inetlab.SMPP.Common.SmppHeader.Command"><summary>
            Gets or sets type of message the SMPP PDU represents.
            </summary></member><member name="P:Inetlab.SMPP.Common.SmppHeader.Status"><summary>
            Indicates the success or failure of an SMPP request.
            </summary></member><member name="P:Inetlab.SMPP.Common.SmppHeader.Sequence"><summary>
            Unique sequence number. A sequence number allows a response PDU to be correlated with a request PDU.
            </summary></member><member name="F:Inetlab.SMPP.Common.SmppSocket._connectionLock"><summary>
            Prevents connect and disconnect at the same time 
            </summary></member><member name="F:Inetlab.SMPP.Common.SmppSocket._disconnected"><summary> Indicates status of connection. Disconnected set to 1, Connected is 0</summary></member><member name="P:Inetlab.SMPP.Common.SmppSocket.ConnectionTimeout"><summary>
            Gets or sets the time to wait while trying to establish a connection before terminating the attempt 
            </summary></member><member name="P:Inetlab.SMPP.Common.SmppSocket.IsConnected"><summary>
            Gets whether the ESME connected to SMSC
            </summary></member><member name="P:Inetlab.SMPP.Common.SmppSocket.EnabledSslProtocols"><summary>
            Defines enabled versions of SSL Protocols for SMPP client. 
            </summary></member><member name="P:Inetlab.SMPP.Common.SmppSocket.ClientCertificates"><summary>
            Defines collection of Client Certificates
            </summary></member><member name="P:Inetlab.SMPP.Common.SmppSocket.Name"><summary>
            Name of the socket. Used for logging.
            </summary></member><member name="P:Inetlab.SMPP.Common.SmppSocket.Proxy"><summary> Provides source and destination IP addresses of originator of this connection </summary><value> The proxy. </value></member><member name="P:Inetlab.SMPP.Common.SmppSocket.ProxyProtocolEnabled"><summary> Gets or sets a value indicating whether the proxy protocol is enabled for this cient instance. </summary><value> True if proxy protocol enabled, false if not. Default is false. </value></member><member name="M:Inetlab.SMPP.Common.SmppSocket.ConnectAsync(System.Net.EndPoint)"><summary>
            Connect to SMSC using EndPoint instance
            </summary><param name="endPoint">EndPoint instance</param><exception cref="T:System.ObjectDisposedException"> Thrown when the instance is disposed.</exception></member><member name="M:Inetlab.SMPP.Common.SmppSocket.DisconnectAsync"><summary>
            Disconnect socket from remote side
            </summary></member><member name="E:Inetlab.SMPP.Common.SmppSocket.evCertificateValidation"><summary>
            Validating the certificate supplied by the remote party.
            </summary></member><member name="F:Inetlab.SMPP.Common.SmppSocket.Connected"><summary>
            Occurs when ESME connected to SMSC
            </summary></member><member name="F:Inetlab.SMPP.Common.SmppSocket.Disconnected"><summary>
            Occurs when client disconnects 
            </summary></member><member name="T:Inetlab.SMPP.Common.SmppTime"><summary> Represents time definitions described in SMPP protocol. </summary></member><member name="M:Inetlab.SMPP.Common.SmppTime.Format(System.DateTime)"><summary> Formats the given date time as absolute SMPP time. </summary><param name="dateTime"> The date time. </param><returns> The formatted value. </returns></member><member name="M:Inetlab.SMPP.Common.SmppTime.Format(System.DateTimeOffset)"><summary> Formats the given date time as absolute SMPP time. </summary><param name="dateTime"> The date time. </param><returns> The formatted value. </returns></member><member name="M:Inetlab.SMPP.Common.SmppTime.Format(System.TimeSpan,System.DateTimeOffset)"><summary> Formats the given date time as SMPP time relative to SMSC local time. </summary><exception cref="T:System.ArgumentNullException">    Thrown when <paramref name="timeSpan" /> longer than 10000 days. </exception><param name="timeSpan"> The time span. </param><param name="localTime"> SMSC local time.</param><returns> The formatted value. </returns></member><member name="M:Inetlab.SMPP.Common.SmppTime.Format(System.TimeSpan)"><summary> Formats the given date time as SMPP time relative to SMSC local time. </summary><exception cref="T:System.ArgumentNullException">    Thrown when <paramref name="timeSpan" /> longer than 10000 days. </exception><param name="timeSpan"> The time span. </param><returns> The formatted value. </returns></member><member name="M:Inetlab.SMPP.Common.SmppTime.TryParse(System.String,System.DateTimeOffset@,System.Nullable{System.DateTimeOffset})"><summary> Attempts to parse a DateTimeOffset from the given SMPP time string. </summary><param name="dateValue"> The SMPP time string. </param><param name="data">      [out] The data. </param><param name="localTime"> The local time for parsing given relative <paramref name="dateValue" />. </param><returns> True if it succeeds, false if it fails. </returns></member><member name="M:Inetlab.SMPP.Common.SmppWriter.GetLength(Inetlab.SMPP.Headers.UserDataHeaderCollection)"><summary> Gets a length of User Data Header </summary></member><member name="T:Inetlab.SMPP.Common.SMSCDeliveryReceipt"><summary>
            SMSC Delivery Receipt (bits 1 and 0 of registered_delivery)
            </summary></member><member name="F:Inetlab.SMPP.Common.SMSCDeliveryReceipt.NotRequested"><summary>
            No SMSC Delivery Receipt requested (default)
            </summary></member><member name="F:Inetlab.SMPP.Common.SMSCDeliveryReceipt.SuccessOrFailure"><summary>
            SMSC Delivery Receipt requested where final delivery outcome is delivery success or failure
            </summary></member><member name="F:Inetlab.SMPP.Common.SMSCDeliveryReceipt.Failure"><summary>
            SMSC Delivery Receipt requested where the final delivery outcome is delivery failure
            </summary></member><member name="M:Inetlab.SMPP.Common.TimeLimitedQueue.Dispose"><summary>
            Releases unmanaged resources held by an instance of this class.
            </summary></member><member name="T:Inetlab.SMPP.Common.UnsuccessfulDelivery"><summary>
            Represents SME address or/and Distribution name to which submission was unsuccessful
            </summary></member><member name="P:Inetlab.SMPP.Common.UnsuccessfulDelivery.DestinationAddress"><summary>
            Destination address of short message.
            </summary></member><member name="P:Inetlab.SMPP.Common.UnsuccessfulDelivery.ErrorStatus"><summary>
            Indicates the success or failure of the request to this SME address.
            </summary></member><member name="T:Inetlab.SMPP.Common.UserData"><summary>
            UserData class contains the user data of PDU
            </summary></member><member name="P:Inetlab.SMPP.Common.UserData.ShortMessage"><summary>
            octets of Short Message
            </summary></member><member name="P:Inetlab.SMPP.Common.UserData.Headers"><summary>
            GSM User Data Header information in the short message
            </summary></member><member name="M:Inetlab.SMPP.Common.UserData.Clone"><summary> Makes a deep copy of the UserData. </summary><returns> A copy of this object. </returns></member><member name="T:Inetlab.SMPP.Encodings.GSMEncoding"><summary>
            Represents unpacked GSM 03.38 character encoding of Unicode characters. 
            </summary></member><member name="T:Inetlab.SMPP.Encodings.GSMPackedEncoding"><summary>
            Represents packed GSM 03.38 character encoding of Unicode characters. 
            </summary></member><member name="M:Inetlab.SMPP.Encodings.GSMPackedEncoding.AddFiller(System.Byte,System.Byte[])"><summary>
            Prepends specified number of bits of padding to the message. Adds filler to align the user data to septets after UDH.
            </summary><param name="prependBits">number of bits</param><param name="orig">original byte array of the message</param></member><member name="M:Inetlab.SMPP.Encodings.GSMPackedEncoding.AddFiller(System.Byte,System.ArraySegment{System.Byte})"><summary>
            Prepends specified number of bits of padding to the message. Adds filler to align the user data to septets after UDH.
            </summary><param name="headerLength">UDH length</param><param name="segment">segment of byte array for the message</param><remarks>
            https://en.wikipedia.org/wiki/Concatenated_SMS
            Note: if a UDH is present and the data encoding is the default 7-bit alphabet, the user data must be 7-bit word aligned after the UDH.[3] This means up to 6 bits of zeros need to be inserted at the start of the [message].
            </remarks></member><member name="M:Inetlab.SMPP.Encodings.GSMPackedEncoding.RemoveFiller(System.Byte,System.Byte[])"><summary>
            Removes a number of bits from beginning of the message
            </summary><param name="removedBits">number of bits</param><param name="orig">original byte array of the message</param>
            https://en.wikipedia.org/wiki/Concatenated_SMS
        </member><member name="P:Inetlab.SMPP.Headers.ApplicationPortAddressingScheme16bit.DestinationPort"><summary>
            Destination Port.
            </summary></member><member name="P:Inetlab.SMPP.Headers.ApplicationPortAddressingScheme16bit.OriginatorPort"><summary>
            Originator Port.
            </summary></member><member name="P:Inetlab.SMPP.Headers.ConcatenatedShortMessage16bit.ReferenceNumber"><summary>
            Concatenated short message reference number.
            </summary></member><member name="P:Inetlab.SMPP.Headers.ConcatenatedShortMessage16bit.Total"><summary>
            Maximum number of short messages in the concatenated short message.
            </summary></member><member name="P:Inetlab.SMPP.Headers.ConcatenatedShortMessage16bit.SequenceNumber"><summary>
            Sequence number of the current short message.
            </summary></member><member name="P:Inetlab.SMPP.Headers.ConcatenatedShortMessages8bit.ReferenceNumber"><summary>
            Concatenated short message reference number.
            </summary></member><member name="P:Inetlab.SMPP.Headers.ConcatenatedShortMessages8bit.Total"><summary>
            Maximum number of short messages in the concatenated short message.
            </summary></member><member name="P:Inetlab.SMPP.Headers.ConcatenatedShortMessages8bit.SequenceNumber"><summary>
            Sequence number of the current short message.
            </summary></member><member name="T:Inetlab.SMPP.Headers.InformationElementIdentifiers"><summary>
            Identifies Information Element in the User Data Header
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.ConcatenatedShortMessages8bit"><summary>
            Concatenated short messages, 8-bit reference number
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.SpecialSMSMessageIndication"><summary>
            Special SMS Message Indication
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.ApplicationPortAddressingScheme8bit"><summary>
            Application port addressing scheme, 8 bit address
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.ApplicationPortAddressingScheme16bit"><summary>
            Application port addressing scheme, 16 bit address
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.SMSCControlParameters"><summary>
            SMSC Control Parameters
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.UDHSourceIndicator"><summary>
            UDH Source Indicator 
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.ConcatenatedShortMessage16bit"><summary>
            Concatenated short message, 16-bit reference number
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.WirelessControlMessageProtocol"><summary>
            Wireless Control Message Protocol
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.TextFormatting"><summary>
            Text Formatting
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.PredefinedSound"><summary>
            Predefined Sound
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.UserDefinedSound"><summary>
            User Defined Sound (iMelody max 128 bytes)
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.PredefinedAnimation"><summary>
            Predefined Animation
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.LargeAnimation"><summary>
            Large Animation (16*16 times 4 = 32*4 =128 bytes)
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.SmallAnimation"><summary>
            Small Animation (8*8 times 4 = 8*4 =32 bytes)
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.LargePicture"><summary>
            Large Picture (32*32 = 128 bytes)
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.SmallPicture"><summary>
            Small Picture (16*16 = 32 bytes)
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.VariablePicture"><summary>
            Variable Picture
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.UserPromptIndicator"><summary>
            User prompt indicator
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.ExtendedObject"><summary>
            Extended Object
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.ReusedExtendedObject"><summary>
            Reused Extended Object
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.CompressionControl"><summary>
            Compression Control
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.ObjectDistributionIndicator"><summary>
            Object Distribution Indicator
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.StandardWvgObject"><summary>
            Standard WVG object
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.CharacterSizeWvgObject"><summary>
            Character Size WVG object
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.ExtendedObjectDataRequestCommand"><summary>
            Extended Object Data Request Command
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.EMailHeader"><summary>
            RFC 822 E-Mail Header
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.HyperlinkFormatElement"><summary>
            Hyperlink format element
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.ReplyAddressElement"><summary>
            Reply Address Element
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.EnhancedVoiceMailInformation"><summary>
            Enhanced Voice Mail Information
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.NationalLanguageSingleShift"><summary>
            National Language Single Shift 
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.NationalLanguageLockingShift"><summary>
            National Language Locking Shift
            </summary></member><member name="F:Inetlab.SMPP.Headers.InformationElementIdentifiers.Unknown"><summary></summary></member><member name="T:Inetlab.SMPP.Headers.UserDataHeader"><summary>
            Represents GSM User Data Header information in the short message user data.
            </summary></member><member name="P:Inetlab.SMPP.Headers.UserDataHeader.IEI"><summary>
            Identifies Information Element in the User Data Header
            </summary></member><member name="P:Inetlab.SMPP.Headers.UserDataHeader.Data"><summary>
            Information Element Data
            </summary></member><member name="P:Inetlab.SMPP.Headers.UserDataHeader.Length"><summary>
            Length of Information Element
            </summary></member><member name="M:Inetlab.SMPP.Headers.UserDataHeader.op_Implicit(Inetlab.SMPP.Headers.UserDataHeader)~System.Byte[]"><summary>
            Converts <see cref="T:Inetlab.SMPP.Headers.UserDataHeader" /> to byte array
            </summary></member><member name="M:Inetlab.SMPP.Headers.UserDataHeader.op_Implicit(System.Byte[])~Inetlab.SMPP.Headers.UserDataHeader"><summary>
            Converts byte array to <see cref="T:Inetlab.SMPP.Headers.UserDataHeader" /></summary></member><member name="T:Inetlab.SMPP.Headers.UserDataHeaderCollection"><summary>
            User Data Header Collection
            </summary></member><member name="M:Inetlab.SMPP.Headers.UserDataHeaderCollection.Of``1"><summary>
            Returns user data headers of specified type
            </summary></member><member name="M:Inetlab.SMPP.Headers.UserDataHeaderCollection.op_Implicit(System.Byte[])~Inetlab.SMPP.Headers.UserDataHeaderCollection"><summary>
            Converts byte array to <see cref="T:Inetlab.SMPP.Headers.UserDataHeaderCollection" /></summary></member><member name="M:Inetlab.SMPP.Headers.UserDataHeaderCollection.op_Implicit(Inetlab.SMPP.Headers.UserDataHeaderCollection)~System.Byte[]"><summary>
            Converts <see cref="T:Inetlab.SMPP.Headers.UserDataHeaderCollection" /> to byte array
            </summary></member><member name="T:Inetlab.SMPP.Metrics.ISmppClientMetrics"><summary> Metrics for SMPP Client. </summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppClientMetrics.Sent"><summary> Gets metrics for sent messages. </summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppClientMetrics.Received"><summary> Gets metrics for received messages. </summary></member><member name="M:Inetlab.SMPP.Metrics.SmppClientMetrics.Reset"><summary> Reset metrics for SMPP client. </summary></member><member name="T:Inetlab.SMPP.Metrics.ISmppMessageMetrics"><summary> Metrics for SMPP messages. </summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppMessageMetrics.Total"><summary> Total transferred requests or responses in one direction. </summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppMessageMetrics.PerSecond"><summary> Transferring speed for last second. Messages per second. </summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppMessageMetrics.AvgPerSecond"><summary> Average speed since last Reset. Messages per second. </summary></member><member name="P:Inetlab.SMPP.Metrics.SmppMessageMetrics.PerSecond"><summary> Transferring speed. Messages per second. </summary></member><member name="M:Inetlab.SMPP.Metrics.SmppMessageMetrics.Reset"><summary> Reset metrics for selected type of messages. </summary></member><member name="T:Inetlab.SMPP.Metrics.ISmppRequestMetrics"><summary> Metrics for SMPP requests. </summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppRequestMetrics.WaitingForResponse"><summary>
            Gets number of request PDU that didn't receive a response with same sequence number.
            </summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppTransferMetrics.InQueue"><summary> Number of messages stored in the queue. </summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppTransferMetrics.Requests"><summary> Metrics for SMPP requests.</summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppTransferMetrics.Responses"><summary> Metrics for SMPP responses.</summary></member><member name="P:Inetlab.SMPP.Metrics.ISmppTransferMetrics.Total"><summary> Total message number for selected direction. </summary></member><member name="P:Inetlab.SMPP.Metrics.SmppTransferMetrics.InQueue"><summary> Number of messages stored in the queue. </summary></member><member name="P:Inetlab.SMPP.Metrics.SmppTransferMetrics.Requests"><summary> Metrics for SMPP requests.</summary></member><member name="P:Inetlab.SMPP.Metrics.SmppTransferMetrics.Responses"><summary> Metrics for SMPP responses.</summary></member><member name="P:Inetlab.SMPP.Metrics.SmppTransferMetrics.Total"><summary> Total message number for selected direction. </summary></member><member name="M:Inetlab.SMPP.Metrics.SmppTransferMetrics.Reset"><summary> Reset metrics for requests and responses. </summary></member><member name="T:Inetlab.SMPP.Parameters.DPFParameter"><summary>
            An ESME may use the set_dpf parameter to request the setting of a delivery pending flag (DPF) for certain delivery failure scenarios
            </summary></member><member name="T:Inetlab.SMPP.Parameters.MessagePayloadParameter"><summary> 
                      The message_payload parameter contains the user data.
            </summary><remarks>Short message user data. The maximum size is SMSC and network implementation specific.</remarks></member><member name="T:Inetlab.SMPP.Parameters.MessageStateParameter"><summary> The parameter is used by the SMSC in the <see cref="T:Inetlab.SMPP.PDU.DeliverSm" /> and <see cref="T:Inetlab.SMPP.PDU.DataSm" />
               PDUs to indicate to the ESME the final message state for an SMSC Delivery Receipt. </summary></member><member name="T:Inetlab.SMPP.Parameters.MoreMessagesToSendParameter"><summary> The parameter is used by the ESME in the <see cref="T:Inetlab.SMPP.PDU.SubmitSm" /> and <see cref="T:Inetlab.SMPP.PDU.DataSm" /> operations 
                      to indicate to the SMSC that there are further messages for the same destination SME.
                      The SMSC may use this setting for network resource optimization. </summary></member><member name="T:Inetlab.SMPP.Parameters.NetworkErrorCodeParameter"><summary> The network_error_code parameter is used to indicate the actual network error code for a
               delivery failure. The network error code is technology specific. </summary></member><member name="T:Inetlab.SMPP.Parameters.OptionalTags"><summary>
            Identifes the Tag field that used to uniquely identify the particular optional parameter
            </summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.DestAddrSubunit"><summary>
            Parameter is used to route messages when received by a mobile station,
            for example to a smart card in the mobile station or to an external device connected to the
            mobile station.
            </summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.DestNetworkType"><summary></summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.SourceNetworkType"><summary>
            indicate the network type associated with the device that originated the message
            </summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.ReceiptedMessageId"><summary>
            The receipted_message_id parameter indicates the ID of the message being receipted in an SMSC Delivery Receipt. 
            This is the opaque SMSC message identifier that was returned in the message_id parameter of the SMPP response PDU 
            that acknowledged the submission of the original message.
            </summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.MessagePayload"><summary>
            message_payload parameter contains the user data.
            </summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.SARReferenceNumber"><summary>
            The sar_msg_ref_num parameter is used to indicate the reference number for a particular
            concatenated short message.
            </summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.SARTotalSegments"><summary>
            The sar_total_segments parameter is used to indicate the total number of short messages
            within the concatenated short message.
            </summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.SARSequenceNumber"><summary>
            The sar_segment_seqnum parameter is used to indicate the sequence number of a particular
            short message within the concatenated short message.
            </summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.MoreMessagesToSend"><summary>
            The more_messages_to_send parameter is used by the ESME in the submit_sm and data_sm
            operations to indicate to the SMSC that there are further messages for the same destination
            SME. The SMSC may use this setting for network resource optimization.
            </summary></member><member name="F:Inetlab.SMPP.Parameters.OptionalTags.MessageState"><summary>
            The message_state optional parameter is used by the SMSC in the deliver_sm and
            data_sm PDUs to indicate to the ESME the final message state for an SMSC Delivery Receipt.
            </summary></member><member name="T:Inetlab.SMPP.Parameters.ReceiptedMessageIdParameter"><summary> This parameter indicates the ID of the message being receipted in an
               SMSC Delivery Receipt. This is the opaque SMSC message identifier that was returned in the
               message_id parameter of the SMPP response PDU that acknowledged the submission of the
               original message. </summary></member><member name="T:Inetlab.SMPP.Parameters.SARReferenceNumberParamter"><summary> 
             Parameter used to indicate the reference number for a particular concatenated short message.
            </summary><remarks><para>This parameter shall contain a originator generated reference number so that a
               segmented short message may be reassembled into a single original message.
               This allows the parallel transmission of several segmented messages. 
               This reference number shall remain constant for every segment which makes up a particular concatenated short message.
             </para><para>When present, the PDU must also contain the <see cref="T:Inetlab.SMPP.Parameters.SARSequenceNumberParameter" /> and <see cref="T:Inetlab.SMPP.Parameters.SARTotalSegmentsParameter" /> parameters.
             Otherwise this parameter shall be ignored.
             </para></remarks></member><member name="T:Inetlab.SMPP.Parameters.SARSequenceNumberParameter"><summary> The TLV parameter used to indicate the sequence number of a particular  short message within the concatenated short message</summary><remarks>This octet shall contain a value in the range 1 to 255 indicating the sequence number of
               a particular message within the concatenated short message. The value
               shall start at 1 and increment by one for every message sent within the concatenated
               short message.
            </remarks><para>When present, the PDU must also contain the <see cref="T:Inetlab.SMPP.Parameters.SARReferenceNumberParamter" /> and <see cref="T:Inetlab.SMPP.Parameters.SARTotalSegmentsParameter" /> parameters.
             Otherwise this parameter shall be ignored.
             </para></member><member name="T:Inetlab.SMPP.Parameters.SARTotalSegmentsParameter"><summary> The parameter is used to indicate the total number of short messages  within the concatenated short message. </summary><remarks><para>This parameter shall contain a value in the range 1 to 255 indicating the total number  of fragments within the concatenated short
               message. The value shall start at 1 and remain constant for every short message which makes up the concatenated short message.</para><para>When present, the PDU must also contain the <see cref="T:Inetlab.SMPP.Parameters.SARSequenceNumberParameter" /> and <see cref="T:Inetlab.SMPP.Parameters.SARTotalSegmentsParameter" /> parameters.
             Otherwise this parameter shall be ignored.
             </para></remarks></member><member name="T:Inetlab.SMPP.Parameters.TLV"><summary>
            Represents TLV (Tag, Length, Value) format for optional parameters.
            </summary></member><member name="P:Inetlab.SMPP.Parameters.TLV.Tag"><summary>
            The Tag field is used to uniquely identify the particular optional parameter.
            </summary></member><member name="P:Inetlab.SMPP.Parameters.TLV.Length"><summary>
            Indicates the length of the Value property in octets.
            </summary></member><member name="P:Inetlab.SMPP.Parameters.TLV.Value"><summary>
            Contains the actual data for the optional parameter
            </summary></member><member name="P:Inetlab.SMPP.Parameters.TLV.TagValue"><summary>
            Identifies the particular optional parameter.
            </summary></member><member name="T:Inetlab.SMPP.Parameters.TLVCollection"><summary>
            Collection of optional parameters in TLV format.
            </summary></member><member name="M:Inetlab.SMPP.Parameters.TLVCollection.RegisterParameter``1(System.UInt16)"><summary> Registers the TLV parameter for a tag value.</summary><typeparam name="TParameter"> Type of the parameter. </typeparam><param name="tag"> The tag. </param><exception cref="T:System.ArgumentException"> throw ArgumentException if type of registering parameter doesn't have constructor with one argument of type byte[]. </exception><example>
             TLVCollection.RegisterParameter&lt;MyTLVParameter&gt;(0x1410);
             ...
             MyTLVParameter myParameter = pdu.Parameters.Of&lt;MyTLVParameter&gt;();
             </example></member><member name="T:Inetlab.SMPP.PDU.AlertNotification"><summary>
            This message is sent by the SMSC to the ESME, when the SMSC has detected that a particular
            mobile subscriber has become available and a delivery pending flag <see cref="T:Inetlab.SMPP.Parameters.DPFParameter" /> had been set for that
            subscriber from a previous <see cref="T:Inetlab.SMPP.PDU.DataSm" /> operation
            </summary></member><member name="P:Inetlab.SMPP.PDU.AlertNotification.SourceAddress"><summary>
            Address of MS which has become available.
            </summary></member><member name="P:Inetlab.SMPP.PDU.AlertNotification.EsmeAddress"><summary>
            Address of ESME which requested an alert on a particular MS becoming available.
            </summary></member><member name="T:Inetlab.SMPP.PDU.Bind"><summary>
            Register an instance of an ESME with the SMSC system 
            and request an SMPP session over this network connection 
            for the submission or delivery of messages
            </summary></member><member name="P:Inetlab.SMPP.PDU.Bind.InterfaceVersion"><summary>
            Indicates the version of the SMPP protocol supported by the ESME.
            </summary></member><member name="P:Inetlab.SMPP.PDU.Bind.SystemId"><summary>
            Identifies the ESME system requesting to bind as a transmitter with the MC.
            </summary></member><member name="P:Inetlab.SMPP.PDU.Bind.Password"><summary>
            The password may be used by the MC to authenticate the ESME requesting to bind.
            </summary></member><member name="P:Inetlab.SMPP.PDU.Bind.SystemType"><summary>
            Identifies the type of ESME system requesting to bind as a transmitter with the MC.
            </summary></member><member name="P:Inetlab.SMPP.PDU.Bind.EsmeAddress"><summary>
            The ESME address range. In <see cref="P:Inetlab.SMPP.Common.SmeAddress.Address" /> property can be specified a single SME address or a range of SME addresses using UNIX Regular Expression notation.
            </summary></member><member name="T:Inetlab.SMPP.PDU.BindResp"><summary>
            Represents the response to the bind PDU. 
            </summary></member><member name="P:Inetlab.SMPP.PDU.BindResp.SystemId"><summary>
            SMSC identifier
            </summary></member><member name="P:Inetlab.SMPP.PDU.BindResp.Parameters"><summary>
            Optional Parameters
            </summary></member><member name="M:Inetlab.SMPP.PDU.BindResp.ChangeSystemId(System.String)"><summary>
            Change SMPP server identifier. Limited to 15 characters.
            </summary></member><member name="T:Inetlab.SMPP.PDU.CancelSm"><summary>
            Cancel previously submitted short message that is still pending delivery.
            </summary></member><member name="P:Inetlab.SMPP.PDU.CancelSm.ServiceType"><summary>
            Set to indicate SMS Application service, if cancellation of a group of application service messages is desired. Otherwise set to NULL.
            </summary></member><member name="P:Inetlab.SMPP.PDU.CancelSm.MessageId"><summary>
            Message ID of the message to be cancelled.
            </summary><para>This must be the SMSC assigned Message ID of the original message.</para><para>Set to NULL if cancelling a group of messages.</para></member><member name="P:Inetlab.SMPP.PDU.CancelSm.SourceAddress"><summary>
            Source address of message(s) to be cancelled. 
            </summary><para>This is used for verification purposes, and must match that supplied in the original message submission request PDU(s).</para><para>May be set to NULL when the message_id is provided.</para></member><member name="P:Inetlab.SMPP.PDU.CancelSm.DestinationAddress"><summary>
            Destination address of message(s) to be cancelled.
            </summary><para>This is used for verification purposes, and must match that supplied in the original message submission request PDU(s).</para><para>May be set to NULL when the message_id is provided.</para></member><member name="T:Inetlab.SMPP.PDU.CancelSmResp"><summary>
            Represents the response to the CANCEL_SM PDU. 
            </summary></member><member name="T:Inetlab.SMPP.PDU.DataSm"><summary>
            This command is used to transfer data between the SMSC and the ESME. It may be used by
            both the ESME and SMSC.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.Concatenation"><summary>
            Gets concatenation parameters.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.EsmClass"><summary>
            Gets or sets special message attributes associated with the short message.
            </summary><value>The esm class.</value></member><member name="P:Inetlab.SMPP.PDU.DataSm.SourceAddress"><summary>
            Type of Number for source address.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.DestinationAddress"><summary>
            Destination address of this short message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.DataCoding"><summary>
            Address of SME which originated this message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.MessageMode"><summary>
            Messaging Mode
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.MessageType"><summary>
            Message Type
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.MessageFeature"><summary>
            GSM Network Specific Features
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.RegisteredDelivery"><summary>
            Indicates if a SMSC delivery receipt or an SME acknowledgement is requested.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.SMSCReceipt"><summary>
            Indicates if a SMSC delivery receipt is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.Acknowledgement"><summary>
            Indicates if an SME acknowledgement is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.Notification"><summary>
            Indicates if an intermidiate notification is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.Parameters"><summary>
            Optional Parameters
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSm.MessageText"><summary>
            Gets message text in specified data coding.
            </summary></member><member name="T:Inetlab.SMPP.PDU.DataSmResp"><summary>
            Represents the response to the data_sm PDU.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSmResp.MessageId"><summary>
            The unique message identifier reference assigned by the SMSC to each submitted short message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DataSmResp.Parameters"><summary>
            Optional Parameters
            </summary></member><member name="T:Inetlab.SMPP.PDU.DeliverSm"><summary>
            The deliver_sm is issued by the SMSC to send a message to an ESME. Using this command,
            the SMSC may route a short message to the ESME for delivery.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.EsmClass"><summary>
            Gets or sets special message attributes associated with the short message.
            </summary><value>The esm class.</value></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.ServiceType"><summary>
            Indicates the SMS Application service associated with the message
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.SourceAddress"><summary>
            Address of SME which originated this message. If not known, set to NULL
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.DestinationAddress"><summary>
            Destination address of destination SME.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.DataCoding"><summary>
            Indicates the encoding scheme of the short message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.UserData"><summary> Gets or sets user data (UD) with user data header (UDH) </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.MessageText"><summary>
            Gets message text in specified data coding.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.MessageMode"><summary>
            Indicates message mode associated with the short message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.MessageType"><summary>
            Indicates message type associated with the short message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.MessageFeature"><summary>
            Indicates GSM Network Specific Features associated with the short message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.SMSCReceipt"><summary></summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.Acknowledgement"><summary>
            Indicates SME originated Acknowledgement
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.Notification"><summary>
            Indicates whether Intermediate notification is requested.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.Parameters"><summary>
            Optional Parameters
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.ProtocolId"><summary>
            Protocol Identifier.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.PriorityFlag"><summary>
            Priority level. 0 lowest, 3 highest
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.RegisteredDelivery"><summary>
            Indicates if an ESME acknowledgement is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.Concatenation"><summary>
            Gets concatenation parameters.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSm.Receipt"><summary>
            Gets or sets delivery receipt of submitted short message.
            </summary></member><member name="T:Inetlab.SMPP.PDU.DeliverSmResp"><summary>
            Represents the response to the deliver_sm PDU.
            </summary></member><member name="P:Inetlab.SMPP.PDU.DeliverSmResp.Parameters"><summary>
            Optional Parameters
            </summary></member><member name="T:Inetlab.SMPP.PDU.EnquireLink"><summary>
            This message can be sent by either the ESME or SMSC and is used to provide a confidencecheck
            of the communication path between an ESME and an SMSC.
            </summary></member><member name="T:Inetlab.SMPP.PDU.EnquireLinkResp"><summary>
            Represents the response to the enquire_link PDU.
            </summary></member><member name="T:Inetlab.SMPP.PDU.GenericNack"><summary>
            This is a generic negative acknowledgement to an SMPP PDU submitted with an invalid
            message header.
            </summary></member><member name="T:Inetlab.SMPP.PDU.OutBind"><summary>
            Outbind allows MC to initiate a SMPP session
            </summary></member><member name="P:Inetlab.SMPP.PDU.OutBind.SystemId"><summary>
            Identifies the MC to the ESME.
            </summary></member><member name="P:Inetlab.SMPP.PDU.OutBind.Password"><summary>
            The password may be used by the ESME for security reasons to authenticate the MC originating the outbind.
            </summary></member><member name="T:Inetlab.SMPP.PDU.PduExtension"><summary> Extension methods for PDU classes. </summary></member><member name="M:Inetlab.SMPP.PDU.PduExtension.ClonePDU``1(System.Collections.Generic.IList{``0})"><summary> Make a deep copy for each of the PDU object in the collection. </summary></member><member name="M:Inetlab.SMPP.PDU.PduExtension.ClonePDU``1(``0)"><summary> Make a deep copy of the PDU object. </summary></member><member name="M:Inetlab.SMPP.PDU.PduExtension.Serialize(Inetlab.SMPP.PDU.SmppPDU,Inetlab.SMPP.Common.EncodingMapper)"><summary>
             A extension method that serialize SMPP PDU to the byte array.
             </summary><param name="pdu">            The PDU to act on. </param><param name="encodingMapper"> The encoding mapper. </param><returns> A byte array </returns></member><member name="M:Inetlab.SMPP.PDU.PduExtension.Deserialize``1(System.Byte[],Inetlab.SMPP.Common.EncodingMapper)"><summary>
             An extension method that deserialize a byte array into SMPP PDU.
             </summary><typeparam name="TPdu"> Type of the PDU. </typeparam><param name="data">   The byte array of the data. </param><param name="mapper"> The <see cref="T:Inetlab.SMPP.Common.EncodingMapper" /> to act on. </param><returns> A SMPP PDU. </returns></member><member name="M:Inetlab.SMPP.PDU.PduExtension.EnsureReferenceNumber``1(System.Collections.Generic.IEnumerable{``0},Inetlab.SMPP.Common.ISequenceGenerator)"><summary>
             Help method that ensures that reference number in concatenated message segments. Sets same reference number for all items in <paramref name="requests" />.
             This method doesn't change reference number if it is already defined (not 0).
             </summary><exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="sequenceGenerator" /> is not defined.</exception><typeparam name="TRequest"> Type of the SMPP request. </typeparam><param name="requests">          The requests list to process. </param><param name="sequenceGenerator"> The sequence generator. </param><returns> A list of SMPP requests. </returns></member><member name="T:Inetlab.SMPP.PDU.QuerySm"><summary>
            Query the status of a previously submitted short message
            </summary></member><member name="P:Inetlab.SMPP.PDU.QuerySm.MessageId"><summary>
            Message ID of the message whose state is to be queried.
            </summary><para>This must be the SMSC assigned Message ID allocated to the original short message 
            when submitted to the SMSC by the <see cref="T:Inetlab.SMPP.PDU.SubmitSm" />, <see cref="T:Inetlab.SMPP.PDU.DataSm" /> or <see cref="T:Inetlab.SMPP.PDU.SubmitMulti" /> command, 
            and returned in the response PDU by the SMSC.
            </para></member><member name="P:Inetlab.SMPP.PDU.QuerySm.SourceAddress"><summary>
            Address of message originator. 
            </summary><para>This is used for verification purposes, and must match that supplied in the original request PDU (e.g. <see cref="T:Inetlab.SMPP.PDU.SubmitSm" />).</para><para>If not known, set to NULL.</para></member><member name="T:Inetlab.SMPP.PDU.QuerySmResp"><summary>
            Represents the response to the query_sm_resp PDU. 
            </summary></member><member name="T:Inetlab.SMPP.PDU.ReplaceSm"><summary>
            ReplaceSm PDU to replace a previously submitted short message that is still pending delivery.
            </summary></member><member name="P:Inetlab.SMPP.PDU.ReplaceSm.MessageId"><summary>
            SMSC message ID of the message to be replaced. This must be the message ID allocated to the original short message when submitted to the SMSC by the <see cref="T:Inetlab.SMPP.PDU.SubmitSm" /> command, and returned in the <see cref="T:Inetlab.SMPP.PDU.SubmitSmResp" /> message by the SMSC.
            </summary></member><member name="P:Inetlab.SMPP.PDU.ReplaceSm.SourceAddress"><summary>
            Address of SME which originated this message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.ReplaceSm.ScheduledDeliveryTime"><summary>
            The short message is to be scheduled by the SMSC for delivery. 
            Set to NULL for immediate message delivery.
            </summary></member><member name="P:Inetlab.SMPP.PDU.ReplaceSm.ValidityPeriod"><summary>
            The validity period of this message. Set to NULL to request the SMSC default validity period.
            Format 'YYMMDDhhmmsstnnp'.
            </summary></member><member name="P:Inetlab.SMPP.PDU.ReplaceSm.RegisteredDelivery"><summary>
            Indicator to signify if an SMSC delivery receipt or an SME acknowledgement is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.ReplaceSm.DefaultMessageId"><summary>
            Indicates the short message to send from a list of predefined (‘canned’) short messages stored on the SMSC. If not using an SMSC canned message, set to 0.
            </summary></member><member name="P:Inetlab.SMPP.PDU.ReplaceSm.MessageText"><summary>
            Gets message text in specified data coding.
            </summary></member><member name="P:Inetlab.SMPP.PDU.ReplaceSm.UserData"><summary> Gets or sets user data (UD) with user data header (UDH) </summary></member><member name="T:Inetlab.SMPP.PDU.ReplaceSmResp"><summary>
            Represents the response to the <see cref="T:Inetlab.SMPP.PDU.ReplaceSm" /> PDU.
            </summary></member><member name="T:Inetlab.SMPP.PDU.SmppMessageExtension"><summary> Extension methods for SMPP PDU classes. </summary></member><member name="M:Inetlab.SMPP.PDU.SmppMessageExtension.GetMessageText(Inetlab.SMPP.PDU.SmppPDU,Inetlab.SMPP.Common.EncodingMapper)"><summary> A SmppPDU extension method that gets message text contained in the PDU instance. </summary><param name="pdu">    The PDU instance </param><param name="mapper"> The Encoding mapper. </param><returns> The message text. </returns></member><member name="T:Inetlab.SMPP.PDU.SmppPDU"><summary>
            Base class represented SMPP PDU, contains SMPP Header.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SmppPDU.Client"><summary>
            Gets SMPP client bound with this PDU
            </summary></member><member name="P:Inetlab.SMPP.PDU.SmppPDU.Tag"><summary>
            Gets or sets an object that contains data to associate with the PDU.
            </summary></member><member name="M:Inetlab.SMPP.PDU.SmppPDU.#ctor(Inetlab.SMPP.Common.SmppHeader)"><summary>
            Create instance of Header
            </summary></member><member name="T:Inetlab.SMPP.PDU.SmppPduExtension"><summary> Extension methods for SMPP PDU classes. </summary></member><member name="M:Inetlab.SMPP.PDU.SmppPduExtension.CreateResponse(Inetlab.SMPP.PDU.SmppRequest)"><summary> Creates response PDU for SMPP command.</summary><param name="request"> The request PDU. </param><returns> Created response </returns></member><member name="T:Inetlab.SMPP.PDU.SubmitMulti"><summary>
            SubmitMulti PDU to submit an SMPP message for delivery to multiple
            recipients or to one or more Distribution Lists
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.Concatenation"><summary>
            Gets concatenation parameters.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.ServiceType"><summary>
            Indicates the SMS Application service associated with the message
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.SourceAddress"><summary>
            Address of SME which originated this message. If not known, set to NULL (Unknown).
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.DestinationAddresses"><summary>
            Contains one or more SME addresses or/and Distribution List names
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.EsmClass"><summary>
            Indicates Message Mode and Message Type.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.ProtocolId"><summary>
            Protocol Identifier. Network specific field.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.PriorityFlag"><summary>
            Designates the priority level of the message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.ScheduledDeliveryTime"><summary>
            The short message is to be scheduled by the SMSC for delivery. 
            Set to NULL for immediate message delivery.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.ValidityPeriod"><summary>
            The validity period of this message. Set to NULL to request the SMSC default validity period.
            Format 'YYMMDDhhmmsstnnp'.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.RegisteredDelivery"><summary>
            Indicates if an SMSC delivery receipt or an SME acknowledgement is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.ReplaceIfPresent"><summary>
            Flag indicating if submitted message should replace an existing message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.DataCoding"><summary>
            Defines the encoding scheme of the short message user data.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.DefaultMessageId"><summary>
            Indicates the short message to send from a list of predefined (‘canned’) short messages stored on the SMSC. If not using an SMSC canned message, set to NULL.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.Parameters"><summary>
            Optional Parameters
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.MessageText"><summary>
            Gets message text in specified data coding.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.UserData"><summary> Gets or sets user data (UD) with user data header (UDH) </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.SMSCReceipt"><summary>
            Indicates if a SMSC delivery receipt is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.Acknowledgement"><summary>
            Indicates if an SME acknowledgement is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMulti.Notification"><summary>
            Indicates if an intermidiate notification is required.
            </summary></member><member name="T:Inetlab.SMPP.PDU.SubmitMultiResp"><summary>
            Represents the response to the submit_multi PDU.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMultiResp.MessageId"><summary>
            The unique message identifier reference assigned by the SMSC to each submitted short message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMultiResp.UnsuccessfulDeliveries"><summary>
            Contains one or more SME address(es) to which submission was unsuccessful.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitMultiResp.Parameters"><summary>
            Optional Parameters
            </summary></member><member name="T:Inetlab.SMPP.PDU.SubmitSm"><summary>
            SubmitSm PDU to submit a short message to the SMSC
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.Concatenation"><summary>
            Gets concatenation parameters.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.ServiceType"><summary>
            Indicates the SMS Application service associated with the message
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.SourceAddress"><summary>
            Address of SME which originated this message. If not known, set to NULL (Unknown).
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.DestinationAddress"><summary>
            Destination address of this short message. For mobile terminated messages, this is the directory number of the recipient MS.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.EsmClass"><summary>
            Indicates Message Mode and Message Type.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.ProtocolId"><summary>
            Protocol Identifier. Network specific field.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.PriorityFlag"><summary>
            Designates the priority level of the message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.ScheduledDeliveryTime"><summary>
            The short message is to be scheduled by the SMSC for delivery. 
            Set to NULL for immediate message delivery.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.ValidityPeriod"><summary>
            The validity period of this message. Set to NULL to request the SMSC default validity period.
            Format 'YYMMDDhhmmsstnnp'.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.RegisteredDelivery"><summary>
            Indicates if an SMSC delivery receipt or an SME acknowledgement is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.ReplaceIfPresent"><summary>
            Flag indicating if submitted message should replace an existing message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.DataCoding"><summary>
            Defines the encoding scheme of the short message user data.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.DefaultMessageId"><summary>
            Indicates the short message to send from a list of predefined (‘canned’) short messages stored on the SMSC. If not using an SMSC canned message, set to 0.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.Parameters"><summary>
            Optional Parameters
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.Optional"><summary>
            Optional Parameters
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.MessageText"><summary>
            Gets message text in specified data coding.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.UserData"><summary> Gets or sets user data (UD) with user data header (UDH) </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.SMSCReceipt"><summary>
            Indicates if a SMSC delivery receipt is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.Acknowledgement"><summary>
            Indicates if an SME acknowledgement is required.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSm.Notification"><summary>
            Indicates if an intermidiate notification is required.
            </summary></member><member name="T:Inetlab.SMPP.PDU.SubmitSmResp"><summary>
            Represents the response to the submit_sm PDU.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSmResp.MessageId"><summary>
            The unique message identifier reference assigned by the SMSC to each submitted short message.
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSmResp.Parameters"><summary>
            Optional Parameters
            </summary></member><member name="P:Inetlab.SMPP.PDU.SubmitSmResp.Optional"><summary>
            Optional Parameters
            </summary></member><member name="T:Inetlab.SMPP.PDU.UnBind"><summary>
            Deregister an instance of an ESME from the
            SMSC and inform the SMSC that the ESME no longer wishes to use this network connection
            for the submission or delivery of messages.
            </summary></member><member name="T:Inetlab.SMPP.PDU.UnBindResp"><summary>
            Represents the response to the unbind PDU. 
            </summary></member><member name="T:Inetlab.SMPP.SmppClient"><summary>
            SMPP protocol client class for connection with an SMSC over a TCP/IP 
            and for sending or receiving short messages to and from the SMSC. 
            </summary></member><member name="P:Inetlab.SMPP.SmppClient.EnabledSslProtocols"><summary>
            Defines enabled versions of SSL Protocols for SMPP client. 
            </summary></member><member name="P:Inetlab.SMPP.SmppClient.ClientCertificates"><summary>
            Defines collection of Client Certificates
            </summary></member><member name="P:Inetlab.SMPP.SmppClient.ConnectionRecovery"><summary> Indicates whether the connection should be recovered. </summary><value> True if connection should be recovered, false if not. </value></member><member name="P:Inetlab.SMPP.SmppClient.ConnectionRecoveryDelay"><summary> Gets or sets the delay before the connection will be recovered. Default is 2 minutes. </summary><value> The connection recovery delay. </value></member><member name="M:Inetlab.SMPP.SmppClient.#ctor"><inheritdoc /></member><member name="M:Inetlab.SMPP.SmppClient.ConnectAsync(System.Net.EndPoint)"><summary>
            Connect to SMSC using EndPoint instance
            </summary><param name="endPoint"><see cref="T:System.Net.EndPoint" /> instance. Can be <see cref="T:System.Net.IPEndPoint" /> or <see cref="T:System.Net.DnsEndPoint" /></param><exception cref="T:System.ObjectDisposedException"> Thrown when the instance is disposed.</exception></member><member name="M:Inetlab.SMPP.SmppClient.ConnectAsync(System.String,System.Int32)"><summary>
            Connect to SMPP server using hostname and port number.
            </summary><param name="host">SMPP server hostname</param><param name="port">SMPP port</param><exception cref="T:System.ObjectDisposedException"> Thrown when the instance is disposed.</exception></member><member name="M:Inetlab.SMPP.SmppClient.Dispose(System.Boolean)"><summary>
             Releases resources used by the Inetlab.SMPP.SmppClient.
             </summary><param name="disposing">    True to release both managed and unmanaged resources; false to
                                         release only unmanaged resources. </param></member><member name="M:Inetlab.SMPP.SmppClient.BindAsync(System.String,System.String,Inetlab.SMPP.Common.ConnectionMode)"><summary> Sends Bind PDU to SMPP Server. Performs authorization on the server. </summary><param name="systemId"> Identifier for the system. </param><param name="password"> The password. </param><param name="mode">     The connection mode. </param><returns> An asynchronous result that yields a BindResp. </returns><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception></member><member name="M:Inetlab.SMPP.SmppClient.BindAsync(Inetlab.SMPP.PDU.Bind)"><summary> Sends Bind PDU to SMPP Server. Performs authentication on the server. </summary><param name="pdu"> The PDU. </param><returns> An asynchronous result that yields a BindResp. </returns><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClient.SubmitAsync(Inetlab.SMPP.Builders.IBuilder{Inetlab.SMPP.PDU.SubmitSm})"><summary>
            Submits an array of SubmitSm messages from SMS builder.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception></member><member name="M:Inetlab.SMPP.SmppClient.SubmitAsync(Inetlab.SMPP.PDU.SubmitSm[])"><summary>
            Submits an array of SubmitSm messages to the SMSC.
            </summary></member><member name="M:Inetlab.SMPP.SmppClient.SubmitAsync(System.Collections.Generic.IEnumerable{Inetlab.SMPP.PDU.SubmitSm})"><summary>
            Submits a collection of SubmitSm messages to the SMSC.
            </summary></member><member name="M:Inetlab.SMPP.SmppClient.SubmitAsync(Inetlab.SMPP.PDU.SubmitSm)"><summary>
            Submits a SubmitSm message to the SMSC
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClient.SubmitAsync(Inetlab.SMPP.Builders.IBuilder{Inetlab.SMPP.PDU.SubmitMulti})"><summary>
            Submits an array of SubmitMulti messages from SMS builder.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception></member><member name="M:Inetlab.SMPP.SmppClient.SubmitAsync(Inetlab.SMPP.PDU.SubmitMulti[])"><summary>
            Submits an array of SubmitMulti messages to the SMSC.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception></member><member name="M:Inetlab.SMPP.SmppClient.SubmitAsync(System.Collections.Generic.IEnumerable{Inetlab.SMPP.PDU.SubmitMulti})"><summary>
            Submits an array of SubmitMulti messages to the SMSC.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception></member><member name="M:Inetlab.SMPP.SmppClient.SubmitAsync(Inetlab.SMPP.PDU.SubmitMulti)"><summary>
            Submits a SubmitMulti message to the SMSC
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClient.CancelAsync(System.String,System.String)"><summary>
            Cancels previously submitted short message that is still pending delivery.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClient.CancelAsync(Inetlab.SMPP.Common.SmeAddress)"><summary>
            Cancels previously submitted short message that is still pending delivery.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClient.CancelAsync(Inetlab.SMPP.PDU.CancelSm)"><summary>
            Cancels previously submitted short message that is still pending delivery.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClient.QueryAsync(System.String,Inetlab.SMPP.Common.SmeAddress)"><summary>
            Query the status of a previously submitted short message.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClient.QueryAsync(Inetlab.SMPP.PDU.QuerySm)"><summary>
            Query the status of a previously submitted short message.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClient.ReplaceAsync(Inetlab.SMPP.PDU.ReplaceSm)"><summary>
            Replaces a previously submitted short message that is still pending delivery.
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="E:Inetlab.SMPP.SmppClient.evAlertNotification"><summary>
            Occurs when received AlertNotification PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppClient.evDeliverSm"><summary>
            Occurs when receiving DeliverSm PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppClient.evServerCertificateValidation"><summary>
             Occurs when validating server certificate
            </summary></member><member name="E:Inetlab.SMPP.SmppClient.evRecoverySucceeded"><summary> Occurs when connection recovery is succeeded.</summary></member><member name="T:Inetlab.SMPP.SmppClientBase"><summary>
            Base class that provides common members for <see cref="T:Inetlab.SMPP.SmppClient" /> and <see cref="T:Inetlab.SMPP.SmppServerClient" /></summary></member><member name="P:Inetlab.SMPP.SmppClientBase.Name"><summary>
            Name of the client. Used for logging.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.InterfaceVersion"><summary>
            Indicates the version of the SMPP protocol supported by the ESME.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.Queue"><summary>
            Returns internal queue state for sent and received PDUs.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.Metrics"><summary>
            Gets metrics for sent and received PDUs.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.RemoteEndPoint"><summary> Gets the remote end point. </summary><value> The remote end point. </value></member><member name="P:Inetlab.SMPP.SmppClientBase.LocalEndPoint"><summary> Gets or sets the local end point. </summary><value> The local end point. </value></member><member name="P:Inetlab.SMPP.SmppClientBase.ReceiveBufferSize"><summary>Gets or sets a value that specifies the size of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" />.</summary><returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the receive buffer. The default is 8192.</returns><exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception><exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than 0.</exception></member><member name="P:Inetlab.SMPP.SmppClientBase.SendBufferSize"><summary>Gets or sets a value that specifies the size of the send buffer of the <see cref="T:System.Net.Sockets.Socket" />.</summary><returns>An <see cref="T:System.Int32" /> that contains the size, in bytes, of the send buffer. The default is 8192.</returns><exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket" /> has been closed. </exception><exception cref="T:System.ArgumentOutOfRangeException">The value specified for a set operation is less than 0.</exception></member><member name="P:Inetlab.SMPP.SmppClientBase.SystemID"><summary>
            Gets ID of the client
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.SystemType"><summary>
            Identifies the type requesting to bind  with the SMSC.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.EsmeAddress"><summary>
            The ESME address range. In <see cref="P:Inetlab.SMPP.Common.SmeAddress.Address" /> property can be specified a single SME address or a range of SME addresses using UNIX Regular Expression notation.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.SendSpeedLimit"><summary>
            Specifies a number of messages per time unit that client sends to the server . Default is <see cref="F:Inetlab.SMPP.Common.LimitRate.NoLimit" />, that means unlimited number of messages.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.ReceiveSpeedLimit"><summary>
            Specifies a number of messages per second that can be received from remote side. Default is <see cref="F:Inetlab.SMPP.Common.LimitRate.NoLimit" />, that means unlimited number of messages.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.WorkerThreads"><summary>
            Specifies a number of worker threads that process received messages. Default is 3.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.ReceivedRequestQueueLimit"><summary>
             Specifies a maximum number of SMPP requests in receive queue. Default is 0 which means not limited.  
            </summary><para>
            When number of received requests exceeds queue limit, receive from network will be delayed until queue has a free slot.
            </para></member><member name="P:Inetlab.SMPP.SmppClientBase.SendQueueLimit"><summary>
            Limits the number of sending SMPP messages to remote side. Default is 0 which means not limited.  
            </summary><para>
            When remote side cannot process messages fast enough, number of sent messages may exceed queue limit. 
            In this situation sending to network will be delayed until queue has a free slot (remote side has processed some messages).
            </para></member><member name="P:Inetlab.SMPP.SmppClientBase.SequenceGenerator"><summary>
            Gets or sets sequence number generator for correlation purposes in SMPP protocol.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.EncodingMapper"><summary>
            Gets or sets encoding mapper that manage relation between SMPP Data Coding and .NET Encoding
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.EnquireLinkInterval"><summary>
            Specifies a period of time when SMPP session status will be checked with EnquireLink command. 
            </summary><para>
            EnquiryLink command will be send during inactivity time. By default is disabled.
            </para></member><member name="P:Inetlab.SMPP.SmppClientBase.ResponseTimeout"><summary>
            Gets or sets the time to wait for a Response on submitted SMPP request.
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.ConnectionTimeout"><summary>
            Gets or sets the time to wait while trying to establish a connection before terminating the attempt. 
            </summary></member><member name="P:Inetlab.SMPP.SmppClientBase.Status"><summary>
            Client connection status
            </summary></member><member name="M:Inetlab.SMPP.SmppClientBase.SendResponseAsync(Inetlab.SMPP.PDU.SmppResponse)"><summary> Sends a response on request PDU. </summary><exception cref="T:System.ArgumentNullException"> Thrown when <paramref name="response" /> is null.</exception><param name="response"> The response PDU. </param></member><member name="E:Inetlab.SMPP.SmppClientBase.evEnquireLink"><summary>
            Occurs when received EnquireLink PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppClientBase.evUnBind"><summary>
            Occurs when Unbind packet received from SMSC
            </summary></member><member name="E:Inetlab.SMPP.SmppClientBase.evDataSm"><summary>
            Occurs when receiving DataSm PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppClientBase.evConnected"><summary>
            Occurs when ESME connected to SMSC
            </summary></member><member name="E:Inetlab.SMPP.SmppClientBase.evDisconnected"><summary>
            Occurs when client disconnects 
            </summary></member><member name="E:Inetlab.SMPP.SmppClientBase.evPduReceiving"><summary>
            Occurs before processing PDU received from remote endpoint
            </summary></member><member name="E:Inetlab.SMPP.SmppClientBase.evPduSending"><summary>
            Occurs before sending PDU to remote endpoint
            </summary></member><member name="M:Inetlab.SMPP.SmppClientBase.EnquireLinkAsync"><summary> Check of the communication path between an ESME and an SMSC. </summary></member><member name="M:Inetlab.SMPP.SmppClientBase.EnquireLinkAsync(Inetlab.SMPP.PDU.EnquireLink)"><summary> Check of the communication path between an ESME and an SMSC. </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClientBase.UnbindAsync"><summary>
            Unregister client from SMSC
            </summary><para>Unbind operation may be viewed as a form of SMSC logoff request to close the current SMPP session.</para><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClientBase.SubmitDataAsync(Inetlab.SMPP.PDU.DataSm)"><summary>
            Sends DATA_SM message
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppClientBase.SubmitDataAsync(Inetlab.SMPP.PDU.DataSm[])"><summary>
            Sends several DATA_SM message
            </summary></member><member name="M:Inetlab.SMPP.SmppClientBase.SubmitDataAsync(Inetlab.SMPP.Builders.IDataSmBuilder)"><summary>
            Creates and sends several DATA_SM messages
            </summary></member><member name="M:Inetlab.SMPP.SmppClientBase.DisconnectAsync"><summary>
            Disconnects client from remote endpoint
            </summary></member><member name="T:Inetlab.SMPP.SmppServer"><summary> The SMPP server to which an <see cref="T:Inetlab.SMPP.SmppClient" /> can be connected.  </summary></member><member name="P:Inetlab.SMPP.SmppServer.ServerCertificate"><summary>
            Gets or sets server certificate for SSL connection
            </summary></member><member name="P:Inetlab.SMPP.SmppServer.EnabledSslProtocols"><summary>
            Defines enabled versions of SSL Protocols for SMPP client. 
            </summary></member><member name="P:Inetlab.SMPP.SmppServer.Name"><summary>
            Name of the server. Used for logging.
            </summary></member><member name="P:Inetlab.SMPP.SmppServer.ConnectedClients"><summary>
            Gets a list of connected clients
            </summary></member><member name="M:Inetlab.SMPP.SmppServer.Stop"><summary>
            Stop server
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evServerStarted"><summary>
            Occurs when server is started
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientConnected"><summary>
            Occurs when SmppClient is connected
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientDisconnected"><summary>
            Occurs when SmppClient is disconnected
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientBind"><summary>
            Occurs when SmppClient bind with server
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientOutBind"><summary>
            Occurs when MC initiate a SMPP session
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientUnBind"><summary>
            Occurs when SmppClient unbind from server
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientSubmitSm"><summary>
            Occurs when SmppClient sent SUBMIT_SM PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientSubmitMulti"><summary>
            Occurs when SmppClient sent SUBMIT_MULTI PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientDataSm"><summary>
            Occurs when SmppClient sent DATA_SM PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientQuerySm"><summary>
            Occurs when SmppClient sent QUERY_SM PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientCancelSm"><summary>
            Occurs when SmppClient sent CANCEL_SM PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientReplaceSm"><summary>
            Occurs when SmppClient sent REPLACE_SM PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientEnquireLink"><summary>
            Occurs when SmppClient sent ENQUIRE_LINK PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientGenericNack"><summary>
            Occurs when SmppClient sent GENERIC_NACK PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServer.evClientCertificateValidation"><summary>
            Validating client certificate.
            </summary></member><member name="T:Inetlab.SMPP.SmppServerClient"><summary> A client connected to <see cref="T:Inetlab.SMPP.SmppServer" />. </summary></member><member name="P:Inetlab.SMPP.SmppServerClient.BindingMode"><summary>
            Connection mode in which client bound to SMPP server
            </summary></member><member name="P:Inetlab.SMPP.SmppServerClient.ClientCertificate"><summary>
            SSL Client Certificate used to authenticate on the SMPP Server.
            </summary></member><member name="P:Inetlab.SMPP.SmppServerClient.RemoteEndPoint"><summary> Gets the remote end point. </summary><value> The remote end point. </value></member><member name="P:Inetlab.SMPP.SmppServerClient.Proxy"><summary> Provides source and destination IP addresses of originator of this connection </summary><value> The proxy. </value></member><member name="P:Inetlab.SMPP.SmppServerClient.ProxyProtocolEnabled"><summary> Gets or sets a value indicating whether the proxy protocol is enabled for this client instance. </summary><value> True if proxy protocol enabled, false if not. Default is false. </value></member><member name="P:Inetlab.SMPP.SmppServerClient.InactivityTimeout"><summary>
            Specifies the maximum period after which time, if no SMPP messages are exchanged, the SMPP session may be dropped gracefully. Default is 2 minutes.
            The value can be changed in the event <see cref="E:Inetlab.SMPP.SmppServer.evClientConnected" /></summary></member><member name="P:Inetlab.SMPP.SmppServerClient.Server"><summary> Gets the server that created this client instance.</summary><value> The server. </value></member><member name="E:Inetlab.SMPP.SmppServerClient.evBind"><summary>
            Occurs when Bind packet received 
            </summary></member><member name="E:Inetlab.SMPP.SmppServerClient.evOutBind"><summary>
            Occurs when OutBind packet received 
            </summary></member><member name="E:Inetlab.SMPP.SmppServerClient.evSubmitSm"><summary>
            Occurs when receiving SubmitSm PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServerClient.evSubmitMulti"><summary>
            Occurs when receiving SubmitMulti PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServerClient.evQuerySm"><summary>
            Occurs when receiving QuerySm PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServerClient.evCancelSm"><summary>
            Occurs when receiving CancelSm PDU
            </summary></member><member name="E:Inetlab.SMPP.SmppServerClient.evReplaceSm"><summary>
            Occurs when receiving ReplaceSm PDU
            </summary></member><member name="M:Inetlab.SMPP.SmppServerClient.DeliverAsync(Inetlab.SMPP.PDU.DeliverSm)"><summary>
            Sends message from SMSC to ESME
            </summary><exception cref="T:System.InvalidOperationException">Thrown when PDU serialization is failed.</exception><exception cref="T:System.ArgumentNullException">Thrown when request instance is null.</exception></member><member name="M:Inetlab.SMPP.SmppServerClient.DeliverAsync(Inetlab.SMPP.Builders.IBuilder{Inetlab.SMPP.PDU.DeliverSm})"><summary>
            Submits an array of DeliverSm messages created from SMS builder.
            </summary></member><member name="M:Inetlab.SMPP.SmppServerClient.DeliverAsync(Inetlab.SMPP.PDU.DeliverSm[])"><summary>
            Submits an array of DeliverSm messages to ESME.
            </summary></member><member name="M:Inetlab.SMPP.SmppServerClient.DeliverAsync(System.Collections.Generic.IEnumerable{Inetlab.SMPP.PDU.DeliverSm})"><summary>
            Submits a collection of DeliverSm messages to ESME.
            </summary></member><member name="T:Inetlab.SMPP.SMS"><summary>
            Initiates SMS builders
            </summary></member><member name="M:Inetlab.SMPP.SMS.ForDeliver"><summary>
            Creates DeliverSm messages
            </summary></member><member name="M:Inetlab.SMPP.SMS.ForData"><summary>
            Creates DataSm messages
            </summary></member><member name="M:Inetlab.SMPP.SMS.ForSubmit"><summary>
            Creates SubmitSm messages
            </summary></member><member name="M:Inetlab.SMPP.SMS.ForSubmitMulti"><summary>
            Creates SubmitMulti messages
            </summary></member><member name="M:Inetlab.SMPP.SMS.ForWapPush"><summary>
            Creates WAP Push message
            </summary></member></members></doc>
